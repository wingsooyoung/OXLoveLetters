{#{{ exportApproved["default"][0].message | dump(2) }}#}

{#{{ exportApproved["default"] | dump(2) }}#}

{%- for letter in exportSubmissions["/pages/writeletters/"] -%}
    {% if loop.first %}
        <div class="waiting">LETTERS WAITING FOR APPROVAL: {{ loop.length }}</div>
    {% endif %}
        <div class="griddywrap {{ loop.revindex }}">
            <div class="containerbox grid-item {{ loop.revindex }}">
                <img src="{{ letter.src }}" alt="" id="postcard">
                <div id="contentbox" class="template">{{ letter.message }}</div>
                {% if letter.signature %}
                    <div id="namebox" class="template">{{ letter.nickname }}</div>
                {% else %}
                    <div id="namebox" class="template">FOR X</div>
                {% endif %}
            </div>
            <div id="membersbox" class="{{ loop.revindex }}">{{ letter.member }}</div>
            <div id="ippyaddy" class="{{ loop.revindex }}" style="display: none">{{ letter.ip }}</div>
            <div id="submish-id" class="{{ loop.revindex }}" style="display: none">{{ letter.subid }}</div>
            <div id="formish-id" class="{{ loop.revindex }}" style="display: none">{{ letter.forid }}</div>
            <br>
            <button class="{{ loop.revindex }}" form="approver" id="approveL" type="submit">Approve</button>
            <br><br>
        </div>
{% else %}
    <li>No new letter submissions.</li>
    <li>AS OF: {{ page.date.toLocaleString() }}</li>
{%- endfor -%}

<div id="deletiongriddy">
    <button id="deleteL" onclick="massDeleter()">Delete (not yet activated)</button>

</div>

<form id="approver" name="approved-letters" data-netlify="true">
    <input type="text" name="path" id="path">
    <input type="text" name="signature" id="signature">
    <input type="text" name="nickname" id="nickname">
{#    make the two below input text instead of textarea and select   #}
    <input type="text" name="lettercontent" id="lettercontent">
    <input type="text" name="members" id="members">
</form>

<script>
    function massDeleter() {
    //get ips of all deletion griddy cards and call api to remove them
        //let theletterid = document.querySelector(`#deletiongriddy > #submish-id`).innerHTML;
        //let theformid = document.querySelector(`#deletiongriddy > #formish-id`).innerHTML;

        // const deletions = await fetch(`https://api.netlify.com/api/v1/forms/${theformid}/submissions?access_token=${NETLIFY_AUTH_TOKEN}/${theletterid}`, {
        //     method: "DELETE"
        // })
    }

    //once submit is completed, THEN trigger move to deletiongriddy
    async function deleteFunction(x) {
        const indexNumber = x.className;

        const node = document.querySelectorAll(`div.griddywrap.${CSS.escape(indexNumber)}`);
        const ch = node.item(1);
        const clone = ch.cloneNode(false);

        // const node = document.querySelector(`div.griddywrap.${CSS.escape(indexNumber)}`);
        // const clone = node.cloneNode(false);

        document.getElementById("deletiongriddy").appendChild(clone);




    }


    const handleSubmit = (event) => {
        event.preventDefault();
        var ele = event.submitter;
        const indexNumber = ele.className;
        let dex = CSS.escape(indexNumber);

        const myForm = event.target;
        const formData = new FormData(myForm);

        let message = document.querySelector(`#griddy > .griddywrap > div.containerbox.grid-item.${CSS.escape(indexNumber)} > #contentbox`).innerHTML;
        let name = document.querySelector(`#griddy > .griddywrap > div.containerbox.grid-item.${CSS.escape(indexNumber)} > #namebox`).innerHTML;
        if (name.length === 0) {
            name = "FOR X";
            console.log("WE MADE IT INTO THE LOOP")
        }
        let member = document.querySelector(`#griddy > .griddywrap > div.containerbox.grid-item.${CSS.escape(indexNumber)} + #membersbox`).innerHTML;
        // let member = prem.substring(0, prem.indexOf("/"));

        //manually enter form data
        formData.set('path', 'default');
        formData.set('signature','bool');
        formData.set('nickname', name);
        formData.set('lettercontent', message);
        formData.set('members', member);

        //send data above to the READ page
        fetch("/", {
            method: "POST",
            headers: { "Content-Type": "application/x-www-form-urlencoded" },
            body: new URLSearchParams(formData).toString(),
        })
            .then(() => alert("The letter has been submitted!"))
            .then((ele) => deleteFunction(ele))
            .then(() => ele.parentElement.remove())
            .catch((error) => alert(error));
    };

    document
        .querySelector("form")
        .addEventListener("submit", handleSubmit);
</script>




