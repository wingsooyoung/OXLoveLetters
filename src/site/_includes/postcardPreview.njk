{#{{ exportApproved["default"][0].message | dump(2) }}#}

{#{{ exportApproved["default"] | dump(2) }}#}

{%- for letter in exportSubmissions["/pages/writeletters/"] -%}
    {% if loop.first %}
        <div class="waiting">LETTERS WAITING FOR APPROVAL: {{ loop.length }}</div>
    {% endif %}
        <div class="griddywrap {{ loop.revindex }}">
            <div class="containerbox grid-item {{ loop.revindex }}" onclick="modalZoom(this)">
                <img src="{{ letter.src }}" alt="" id="postcard">
                <div id="contentbox" class="template">{{ letter.message }}</div>
                {% if letter.signature %}
                    <div id="namebox" class="template">{{ letter.nickname }}</div>
                {% else %}
                    <div id="namebox" class="template">FOR X</div>
                {% endif %}
            </div>
            <div id="membersbox" class="{{ loop.revindex }}">{{ letter.member }}</div>
            <div id="ippyaddy" class="{{ loop.revindex }}" style="display: none">{{ letter.ip }}</div>
            <div id="submish-id" class="{{ loop.revindex }}" style="display: none">{{ letter.subid }}</div>
            <div id="formish-id" class="{{ loop.revindex }}" style="display: none">{{ letter.forid }}</div>
            <br>
            <button class="{{ loop.revindex }}" form="approver" id="approveL" type="submit">Approve</button>
            <button class="{{ loop.revindex }}" id="undoer" onclick="undoerFunc({{ loop.revindex }})">Undo</button>
            <br><br>
        </div>
{% else %}
    <li>No new letter submissions.</li>
    <li>AS OF: {{ page.date.toLocaleString() }}</li>
{%- endfor -%}

<div id="deletiongriddy">
    <button id="deleteL" onclick="massDeleter()">Delete All Letters Below</button>
    <div id="innerDeletionGriddy">

    </div>
</div>

<form id="approver" name="approved-letters" data-netlify="true">
    <input type="text" name="path" id="path">
    <input type="text" name="signature" id="signature">
    <input type="text" name="nickname" id="nickname">
    <input type="text" name="lettercontent" id="lettercontent">
    <input type="text" name="members" id="members">
</form>

<script>

    function duperaser() {


    }


    async function massDeleter() {
        console.log("Deletion in progress...")
        let theLetterID = document.querySelectorAll(`#innerDeletionGriddy #submish-id`);
        var letterIDs = [];
        theLetterID.forEach(function (node) {
            letterIDs.push(node.innerHTML)
        })
        let theFormIDdiv = document.querySelector(`#innerDeletionGriddy #formish-id`);
        let theFormID = theFormIDdiv.innerHTML;

        const finalData = {
            theFormID,
            letterIDs
        }

        await postData('https://eoluzosc67e82zu.m.pipedream.net', finalData)
            .then(finalData => {
                console.log("postData to submission-created endpoint was a SUCCESS: " + JSON.stringify(finalData))
            })
            .then((res) => alert(res.body))
            .catch(error => {
                console.log(error)
                window.alert("postData to submission-created endpoint was a FAILURE")
            });
    }

    async function postData(url = '', data = {}) {
        // A wrapper function for standard JS fetch
        return await fetch(url, {
            method: 'POST',
            mode: 'cors',
            cache: 'no-cache',
            credentials: 'same-origin',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });
    }

    async function deleteFunction(x) {
        const nodeSelect = document.querySelectorAll(`div.griddywrap.${CSS.escape(x)}`);
        var ch = nodeSelect.item(0);
        const cloneThis = ch.cloneNode(true);

        document.getElementById("innerDeletionGriddy").appendChild(cloneThis);
    }

    function undoerFunc(x) {
        const nodeSelect = document.querySelectorAll(`div.griddywrap.${CSS.escape(x)}`);
        var ch = nodeSelect.item(0);
        const cloneThis = ch.cloneNode(true);

        document.getElementById("griddy").appendChild(cloneThis);
        document.getElementById("innerDeletionGriddy").removeChild(ch);
    }


    const handleSubmit = (event) => {
        event.preventDefault();
        var ele = event.submitter;
        var indexNumber = ele.className;
        let dex = CSS.escape(indexNumber);

        const myForm = event.target;
        const formData = new FormData(myForm);

        let message = document.querySelector(`#griddy > .griddywrap > div.containerbox.grid-item.${CSS.escape(indexNumber)} > #contentbox`).innerHTML;
        let name = document.querySelector(`#griddy > .griddywrap > div.containerbox.grid-item.${CSS.escape(indexNumber)} > #namebox`).innerHTML;
        if (name.length === 0) {
            name = "FOR X";
            console.log("WE MADE IT INTO THE LOOP")
        }
        let member = document.querySelector(`#griddy > .griddywrap > div.containerbox.grid-item.${CSS.escape(indexNumber)} + #membersbox`).innerHTML;
        // let member = prem.substring(0, prem.indexOf("/"));

        //manually enter form data
        formData.set('path', 'default');
        formData.set('signature','bool');
        formData.set('nickname', name);
        formData.set('lettercontent', message);
        formData.set('members', member);

        //send data above to the READ page
        fetch("/", {
            method: "POST",
            headers: { "Content-Type": "application/x-www-form-urlencoded" },
            body: new URLSearchParams(formData).toString(),
        })
            .then((response) => {
                if (response.status === 200) {
                    console.log("The letter has been submitted!")
                    deleteFunction(indexNumber);
                    ele.parentElement.remove()
                } else if (response.status === 429) {
                    alert("Too many requests, try again later!")
                } else {
                    alert("Error: "+response.status)}
            })
            .catch((error) => alert(error));
    };

    document
        .querySelector("form")
        .addEventListener("submit", handleSubmit);
</script>




